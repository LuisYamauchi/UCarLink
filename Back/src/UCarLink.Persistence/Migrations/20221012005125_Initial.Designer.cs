// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCarLink.Persistence.Contextos;

namespace UCarLink.Persistence.Migrations
{
    [DbContext(typeof(UCarLinkContext))]
    [Migration("20221012005125_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("UCarLink.Domain.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("UCarLink.Domain.Combustivel", b =>
                {
                    b.Property<int>("IdCombustivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCombustivel");

                    b.ToTable("Combustiveis");
                });

            modelBuilder.Entity("UCarLink.Domain.Configuracao", b =>
                {
                    b.Property<int>("IdConfiguracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PorcentagemComissao")
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdeDiasValidadePadrao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValorMaxBusca")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorMinBusca")
                        .HasColumnType("TEXT");

                    b.HasKey("IdConfiguracao");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("UCarLink.Domain.CorVeiculo", b =>
                {
                    b.Property<int>("IdCorVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCorVeiculo");

                    b.ToTable("CoresVeiculo");
                });

            modelBuilder.Entity("UCarLink.Domain.Intencao", b =>
                {
                    b.Property<int>("IdIntencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alarme")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AnoFinal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AnoInicial")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArCondicionado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cambio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CombustivelIdCombustivel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraVenda")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CorVeiculoIdCorVeiculo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirecaoEletrica")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("KmFinal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("KmInicial")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloIdModelo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Som")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TipoPortaIdTipoPorta")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TipoVeiculoIdTipoVeiculo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TravasEletricas")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorVeiculo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VendedorInclusaoIdVendedor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VendedorNegociacaoIdVendedor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VidroEletrico")
                        .HasColumnType("TEXT");

                    b.HasKey("IdIntencao");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("CombustivelIdCombustivel");

                    b.HasIndex("CorVeiculoIdCorVeiculo");

                    b.HasIndex("ModeloIdModelo");

                    b.HasIndex("TipoPortaIdTipoPorta");

                    b.HasIndex("TipoVeiculoIdTipoVeiculo");

                    b.HasIndex("VendedorInclusaoIdVendedor");

                    b.HasIndex("VendedorNegociacaoIdVendedor");

                    b.ToTable("Intencoes");
                });

            modelBuilder.Entity("UCarLink.Domain.Loja", b =>
                {
                    b.Property<int>("IdLoja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdLoja");

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("UCarLink.Domain.Modelo", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Descricao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MontadoraIdMontadora")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdModelo");

                    b.HasIndex("MontadoraIdMontadora");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("UCarLink.Domain.Montadora", b =>
                {
                    b.Property<int>("IdMontadora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMontadora");

                    b.ToTable("Montadoras");
                });

            modelBuilder.Entity("UCarLink.Domain.TipoPorta", b =>
                {
                    b.Property<int>("IdTipoPorta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTipoPorta");

                    b.ToTable("TiposPortas");
                });

            modelBuilder.Entity("UCarLink.Domain.TipoVeiculo", b =>
                {
                    b.Property<int>("IdTipoVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTipoVeiculo");

                    b.ToTable("TiposVeiculo");
                });

            modelBuilder.Entity("UCarLink.Domain.Vendedor", b =>
                {
                    b.Property<int>("IdVendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LojaIdLoja")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdVendedor");

                    b.HasIndex("LojaIdLoja");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("UCarLink.Domain.Intencao", b =>
                {
                    b.HasOne("UCarLink.Domain.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("UCarLink.Domain.Combustivel", "Combustivel")
                        .WithMany()
                        .HasForeignKey("CombustivelIdCombustivel");

                    b.HasOne("UCarLink.Domain.CorVeiculo", "CorVeiculo")
                        .WithMany()
                        .HasForeignKey("CorVeiculoIdCorVeiculo");

                    b.HasOne("UCarLink.Domain.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloIdModelo");

                    b.HasOne("UCarLink.Domain.TipoPorta", "TipoPorta")
                        .WithMany()
                        .HasForeignKey("TipoPortaIdTipoPorta");

                    b.HasOne("UCarLink.Domain.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("TipoVeiculoIdTipoVeiculo");

                    b.HasOne("UCarLink.Domain.Vendedor", "VendedorInclusao")
                        .WithMany()
                        .HasForeignKey("VendedorInclusaoIdVendedor");

                    b.HasOne("UCarLink.Domain.Vendedor", "VendedorNegociacao")
                        .WithMany()
                        .HasForeignKey("VendedorNegociacaoIdVendedor");

                    b.Navigation("Cliente");

                    b.Navigation("Combustivel");

                    b.Navigation("CorVeiculo");

                    b.Navigation("Modelo");

                    b.Navigation("TipoPorta");

                    b.Navigation("TipoVeiculo");

                    b.Navigation("VendedorInclusao");

                    b.Navigation("VendedorNegociacao");
                });

            modelBuilder.Entity("UCarLink.Domain.Modelo", b =>
                {
                    b.HasOne("UCarLink.Domain.Montadora", "Montadora")
                        .WithMany()
                        .HasForeignKey("MontadoraIdMontadora");

                    b.Navigation("Montadora");
                });

            modelBuilder.Entity("UCarLink.Domain.Vendedor", b =>
                {
                    b.HasOne("UCarLink.Domain.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaIdLoja");

                    b.Navigation("Loja");
                });
#pragma warning restore 612, 618
        }
    }
}
